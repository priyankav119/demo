<?xml version="1.0" encoding="UTF-8"?><contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>CASE_APP_getImageForDocumentType</name>
        <uuid>_a-0000da89-b5e9-8000-9ba2-011c48011c48_3514</uuid>
        <description>Retrieves an icon representing the passed in document based on its extension.</description>
        <parentUuid>_a-0000d9b9-6309-8000-9ba2-011c48011c48_1751</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>=#"SYSTEM_SYSRULES_documentImage"(document: with(
  local!ext:upper(document(ri!doc,"extension")),
  local!isImage:contains(#"_a-0000da89-b5e9-8000-9ba2-011c48011c48_3516", local!ext),
  local!isDoc:contains(#"_a-0000da89-b5e9-8000-9ba2-011c48011c48_3515", local!ext),
  if(and(not(local!isImage),not(local!isDoc)),
    #"_a-0000da89-b5e9-8000-9ba2-011c48011c48_3518"[1],
    if(local!isImage,
      ri!doc,
      #"_a-0000da89-b5e9-8000-9ba2-011c48011c48_3518"[wherecontains(local!ext,#"_a-0000da89-b5e9-8000-9ba2-011c48011c48_3519")]
    )
  )
))</definition>
        <namedTypedValue>
            <name>doc</name>
            <type>
                <name>CollaborationDocument</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul><!--updated on 2016-10-24T12:44:05.584-->

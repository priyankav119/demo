<?xml version="1.0" encoding="UTF-8"?><contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>CASE_APP_SR_uiFormAssignToCaseWorker</name>
        <uuid>bf5b3b0f-ff3c-4efa-bbd5-e40a3a0982d4</uuid>
        <description>Form that allows assigning a Case Worker to a CSR case. The form automatically selects the CW with the most availability, but selection can be overridden.</description>
        <parentUuid>_a-0000da5f-caaa-8000-9ba2-011c48011c48_2618</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>/* To Test:
1) Set serviceReq to type!CASE_APP_ServiceRequest(
  requestNum:"123a-1234",
  requestDateTime:now(),
  type:"I need help with an Order",
  relatedCustomer:CASE_APP_getAllCustomerFieldsById(1),
  relatedOrder: CASE_APP_getAllOrderFieldsById(1),
  relatedOrderItemId:1,
  comments:"Sample comments",
  status:"Solution",
  id:53051235
)
*/
load(
  local!userWorkload:apply(
    #"_a-0000da5f-caaa-8000-9ba2-011c48011c48_2769",
    getdistinctusers(#"_a-0000da5f-caaa-8000-9ba2-011c48011c48_2763")
  ),
  local!gridPI:#"SYSTEM_SYSRULES_pagingInfo"(1,5,#"SYSTEM_SYSRULES_sortInfo"("workload",true)),
  local!suggestedUser:local!userWorkload.user[wherecontains(tointeger(min(local!userWorkload.workload)),tointeger(local!userWorkload.workload))[1]],
  with(
    local!gridData:todatasubset(local!userWorkload, local!gridPI),
    #"SYSTEM_SYSRULES_formLayout"(
      label: "Assign Customer Service Request to Case Worker",
      instructions: "Please select a Case Worker for this Request",
      firstColumnContents: {
        #"SYSTEM_SYSRULES_milestoneField"(
          steps:#"_a-0000da5f-caaa-8000-9ba2-011c48011c48_2848",
          active:ri!currentMilestone
        ),
        #"051657d6-8b7d-4398-b529-edffef50deae"(ri!serviceReq, ri!currentMilestone),
        #"SYSTEM_SYSRULES_sectionLayout"(
          label: "Assign Case Worker &amp; Priority",
          firstColumnContents: {
            #"SYSTEM_SYSRULES_dropdownField"(
              label:"Available Case Workers",
              instructions:"User with less workload automatically selected. You may override selection.",
              choiceLabels:local!userWorkload.userDisplay,
              placeholderLabel:"---Select a Case Worker---",
              choiceValues:local!userWorkload.user,
              value:local!suggestedUser,
              saveInto:local!suggestedUser,
              required:true
            ),
            #"SYSTEM_SYSRULES_dropdownField"(
              label: "Assign Case Priority",
              instructions: "CRITICAL: Revenue-impacting enterprise issues that affect the entire company. HIGH: issues that may potentially become revenue impacting but do not affect the entire company. MEDIUM: issues affecting a single user or for enhancement requests that need to be completed to avoid impending revenue loss. LOW: issues that have known workarounds, issues that do not affect revenue, or enhancement suggestions.",
              choiceLabels: #"_a-0000db86-d3ef-8000-0315-010000010000_3399",
              placeholderLabel: "---Select a Priority---",
              choiceValues: #"_a-0000db86-d3ef-8000-0315-010000010000_3399",
              value: ri!serviceReq.priority,
              saveInto: ri!serviceReq.priority,
              required: true
            )
          },
          secondColumnContents:{
            #"SYSTEM_SYSRULES_gridField"(
              label:"Workload per Case Worker",
              totalCount:length(local!userWorkload),
              columns:{
                #"SYSTEM_SYSRULES_gridTextColumn"(
                  label:"Case Worker",
                  field:"userDisplay",
                  data:index(local!gridData.data,"userDisplay",null)
                ),
                #"SYSTEM_SYSRULES_gridTextColumn"(
                  label:"Task Workload",
                  field:"workload",
                  data:index(local!gridData.data,"workload",null)
                )
              },
              value:local!gridPI,
              saveInto:local!gridPI
            )
          }
        )
      },
      secondColumnContents: {},
      buttons: #"SYSTEM_SYSRULES_ButtonLayout"(
        primaryButtons: {
          #"SYSTEM_SYSRULES_ButtonWidgetSubmit"(
            label: "Submit",
            style: "PRIMARY",
            saveInto: {
              a!save(ri!caseWorker,local!suggestedUser),
              a!save(ri!serviceReq.serviceRep, local!suggestedUser),
              a!save(ri!serviceReq.status, #"_a-0000da5f-caaa-8000-9ba2-011c48011c48_2630"[3])
            }
          )
        },
        secondaryButtons: {}
      ),
      validations: {}
    )
  )
)</definition>
        <namedTypedValue>
            <name>serviceReq</name>
            <type>
                <name>CASE_APP_ServiceRequest</name>
                <namespace>urn:com:appian:types:CASE_APP</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>caseWorker</name>
            <type>
                <name>User</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>currentMilestone</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
</contentHaul><!--updated on 2016-10-24T12:44:07.318-->
